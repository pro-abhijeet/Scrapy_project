# -*- coding: utf-8 -*-
"""Nulearn_scrapy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fU2GYZ4majRXcge__DHmXAYPpeK4MGHE
"""

import json
from urllib.request import Request
import scrapy
from scrapy.crawler import CrawlerProcess
import re

class CoursespiderSpider(scrapy.Spider):
    name = 'coursespider'
    start_urls = ['https://www.nulearn.in/']

    def parse(self, response):
        url = 'https://www.nulearn.in/MainSite/retrieve/?id=all_course'
        yield scrapy.Request(url=url, callback=self.parse_url)
    
    def parse_url(self, response):
        data = response.json()
        for i in data:
            c = i['course_url']
            url = f'https://www.nulearn.in/courses/{c}'
            yield scrapy.Request(url=url, callback=self.parse_course)

    def parse_course(self,response):
        ##course title
        title = response.css('h1.course-page-name::text').get()

        ## short description
        short_desc = response.xpath('/html/body/div[1]/div[2]/div[4]/div[1]/div[1]/p').get().replace(' class="course-banner-para" style="text-align: justify;"','').replace('<p>','').replace('</p>','').replace('      ','')
        
        ## features
        combine_features = response.xpath('/html/body/div[1]/div[2]/div[4]/div[1]/div[1]/div[2]/div').getall()

        d = {}
        l = []
        institute = ''
        c_batch = ''
        c_date = ''
        c_duration = ''
        learning = ''
        masterclass = ''
        for i in range(len(combine_features)):       
            key = combine_features[i].split('\r')[2].replace('              <div>','').replace('</div>','')
            value = combine_features[i].split('\r')[1].replace('              <h4 class="course-banner-sub-lael">','').replace('</h4>','')
            d[f'{key}'] = f'{value}'
        l.append(d)

        for i in range(len(l)):
            l1 = l[i]
            for k,v in l1.items():
                if k == 'INSTITUTION' or k == 'INSTITUTE' or k == '':
                    institute = v
                # break
                if k == 'Course Duration' or k == 'COURSE DURATION':
                    c_duration = v
                if k=='BATCH' or k=='BATCH ':
                    c_batch = v
                if k == 'DATE OF COMMENCEMENT' or k == 'COMMENCEMENT DATE':
                    c_date = v
                if k == 'ONLINE SESSIONS &amp; CAMPUS VISITS' or k == 'ONLINE SESSIONS &amp; CAMPUS VISIT':
                    learning = v
                if v == 'Masterclass':
                    masterclass = k

        ## description
        desc = response.xpath('//*[@id="about-course"]/div[1]/p[1]').get().replace('<strong>','').replace('\u2019','').replace('\u00a0','').replace('<br>','').replace('class="course-detail-para"','').replace('\r','').replace('</strong>','').replace('<b><u><br></u></b>','').replace('class="font-500 lh-2 push--bottom" style="padding: 0px; line-height: 1.9; color: rgb(32, 31, 38); font-family: Montserrat, sans-serif; outline: 0px !important; margin-bottom: 22px !important;"','')

        ## objective
        object = response.xpath('//*[@id="about-course"]/div[1]/ul').extract()

        if object != []:
            objectives = object[0].replace('<ul>\r<li>','').replace('<p>','').replace('</p>','').replace('</li>\r<li>','|').replace('</li>\r</ul>','').replace('</li><li>','|').replace('<ul><li>','').replace('<br>','').replace('</li></ul><li>','|').replace('<b>','').replace('</b>','').replace('</li></ul></li></ul>','').replace('<p class="course-detail-para">','').replace('<strong>','').replace('</strong>','').replace('<li>','')
        else:
            objectives = ''

        t1 = response.xpath('/html/body/div[1]/div[2]/div[5]/div[2]/ul').extract()
        t2 = response.xpath('/html/body/div[1]/div[2]/div[5]/div[2]/p').getall()
        target_students = ''

        if t1 != [] and t2 != []:
            if t1 == ['<ul>\r</ul>'] and '<br>' in t2[0]:
                target_students = t2[0].replace('<p class="course-detail-para">','').replace('<ul>','').replace('</ul>','').replace('<li>','').replace('\r','').replace('<br>','').replace('</p>','').replace('\xa0','')
            elif t2 == ['<p class="course-detail-para"> </p>']:
                target_students = t1[0].replace('<ul style="margin-top: 0px; padding-left: 20px; font-family: Poppins, sans-serif;"><li style="margin-top: 10px; font-size: 15px; line-height: 23px;">','').replace('<li style="margin-top: 10px; font-size: 15px; line-height: 23px;">','').replace('</li></ul>','').replace('</li>','|')
            else:
                try:
                    target_students = t2[1].replace(',','|').replace('<p>','').replace('</p>','').replace('<br>','').replace('<ul>','')
                except:
                    target_students = t2[0].replace(',','|').replace('<p>','').replace('</p>','').replace('<br>','').replace('<ul>','').replace('<p class="course-detail-para">','')
        
        ## eligibility
        eligibility = response.xpath('/html/body/div[1]/div[2]/div[5]/div[2]/div[3]/div[1]/ul').extract()
        eligible = ''
        if eligibility != []:
            e = str(eligibility)
            eligible = e.replace('[','').replace(']','').replace('<ul>','').replace('</p>','|').replace(r'\r','').replace('<li>','').replace('</ul>','').replace('</li>\r<li>','|').replace('</li>','|').replace("'\r<li>",'').replace('<ul class="course-elig-list">','').replace('<li class="elig-para">','').replace('<p style="text-align: left;">','').replace('<p style="text-align: inherit;">','').replace('<ul class="course-elig-list" style="text-align: justify">','').replace('<ul class="course-elig-list" style="margin-top: 0px; padding-left: 20px; padding-bottom: 19px; font-family: Poppins, sans-serif;"><li class="elig-para" style="margin-top: 10px; font-size: 15px; line-height: 23px;">','')
        else:
            eligible = ''

        ## assesment
        assesment = response.xpath('/html/body/div[1]/div[2]/div[5]/div[2]/div[4]/div/p').extract()
        asses = ''
        a = ''
        for j in assesment:
            a += j.replace('<p>','').replace('</p>','').replace('<br>','').replace('<p style="text-align: justify;">','').replace('\r','').replace('.','|')
        asses = a
        a = ''

        ## price
        fees = response.xpath('/html/body/div[1]/div[2]/div[6]/div[2]/div[3]/div[2]/h2').extract()
        if fees != []:
            fee = fees[0].replace('<h2 class="program-fee-amount">','').replace('</h2>','').replace('<span style="font-size: 19px;">(Limited Time Offer)</span>','').replace('<del>95,000</del>','')
        else:
            fee = ''
        f = ''

        ## installment - no. of installments, date, amount
        install = response.xpath('/html/body/div[1]/div[2]/div[6]/div[2]/div[3]/div[4]/div/div[1]').getall()
        installments = "".join(str(install).replace(',','|').replace('[','').replace("]",'').replace("'",'').replace('<div>','').replace('</div>','').replace(r"\r",r"").replace('<div class="emi-row-block tenure">','').replace('              ','').replace('            ',''))
        
        date_install = response.xpath('/html/body/div[1]/div[2]/div[6]/div[2]/div[3]/div[4]/div/div[2]').getall()
        install_date = "".join(str(date_install).replace('             ','').replace('            ','').replace('<div class="emi-row-block">','').replace(r"\r",'').replace('<div>','').replace('</div>','').replace('[','').replace(']','').replace("'",'').replace(',','|'))
        
        amount_install = response.xpath('/html/body/div[1]/div[2]/div[6]/div[2]/div[3]/div[4]/div/div[3]').getall()
        install_amount = "".join(str(amount_install).replace('<div class="emi-row-block right-align">','').replace(',','|').replace('[','').replace("]",'').replace("'",'').replace('<div>','').replace('</div>','').replace(r"\r",r"").replace('<div class="emi-row-block tenure">','').replace('              ','').replace('            ',''))

        ## instructor details     
        mentor_name = response.css('div.mentor-name::text').getall()
        m = ''
        mentors = ''
        for k in mentor_name:
            m+= k
            m+= '|'
        mentors = m

        mentor_degree = response.css('div.mentor-degree').getall()
        deg = ''
        mentors_degree = ''
        for w in range(len(mentor_degree)):
            deg+= mentor_degree[w].replace('<div class="mentor-degree">','').replace('</div>','')
            deg += '|'
        mentors_degree = deg

        fac_desc = response.css('button.download-bochure-button').getall()
        f = ''
        faculty_desc = ''
        try:
            for z in range(len(fac_desc)):
                f += fac_desc[z].split('fac_desc')[1].split(' image')[0].replace('="','').replace('&lt;p&gt;','').replace('\r\r','').replace('&lt;/p&gt;','').replace('\t','').replace('\r','')
                f+= '|'
        except:
            pass

        try:
            f += fac_desc[6].split('fac_desc')[1].split(' image')[0].replace('="','').replace('&lt;p&gt;','').replace('\r\r','').replace('&lt;/p&gt;','').replace('\t','').replace('\r','')
            f+= '|'
        except:
            pass
        try:
            f += fac_desc[4].split('fac_desc')[1].split(' image')[0].replace('="','').replace('&lt;p&gt;','').replace('\r\r','').replace('&lt;/p&gt;','').replace('\t','').replace('\r','')
            f+= '|'
        except: 
            pass
        faculty_desc = f
        f = ''

        mentor_img = ''
        text = str(fac_desc)
        urls = re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9A-fA-F]))+',text)
        mentor_img = str(urls).replace('[','').replace(']','').replace(',',' |')

        ## reviews and reviewer details
        test_name = response.css('p.student-name::text').getall()
        testimonial_name = ''
        t_name = []
        for j in test_name:
            s = ''
            if j in t_name:
                continue
            else:
                s += j
                t_name.append(s)
        testimonial_name = '|'.join(t_name)
        t_name = []

        test_desig = response.css('p.test-desc::text').getall()
        t_desig = []
        testimonial_desig = ''
        for j in test_desig:
            s = ''
            if j in t_desig:
                continue
            else:
                s += j
                t_desig.append(s)
        testimonial_desig = '|'.join(t_desig)
        t_desig = []

        test_desc = response.css('p.test-text').getall()
        testimonial_desc = ''
        t_desc = []
        for j in test_desc:
            s = ''
            if j in t_desc:
                continue
            else:
                s += j.replace('<p class="test-text" style="text-align:left;">','').replace(r"\r",r'').replace('                ','').replace('</p>','').replace('              ','')
                t_desc.append(s)
        testimonial_desc = '|'.join(t_desc)
        t_desc = []

        ## curriculum
        mods = response.xpath('/html/body/div[1]/div[2]/div[6]/div[2]/div[1]/div').getall()
        
        modules = []
        if mods != []:
            mod = []
            for j in range(len(mods)):
                text = mods[j]
                o_tag1 = 'h4 class="que" data-ix="syllabus-accordian"'
                c_tag1 = 'h4'
                r_text1 = '<' + o_tag1 + '>(.*?)</' + c_tag1 + '>'
                modstr = re.findall(r_text1,text)
                mod.append(''.join(modstr))
            modules.append('|'.join(mod))
        else:
            modules.append('')

        submodule = []
        if mods != []:
            submod = []
            for j in range(len(mods)): 
                text1 = mods[j].replace('                ','').replace("\r",'')
                o_tag2 = 'ul class="syllabus-list"'
                c_tag2 = 'ul'
                r_text2 = '<' + o_tag2 + '>(.*?)</' + c_tag2 + '>'
                sub = re.findall(r_text2,text1)
                submod.append(''.join(sub))
            submodule.append('|'.join(submod))
        else:
            submodule.append('')

        s1 = '<?xml version="1.0"?><mainmodule>' 
        s2 = '</mainmodule>'
        module_list = ''
        f = ''
        f1 = ''
        for i,j,c in zip(modules[0].split('|'),range(len(submodule[0].split('|'))),range(1, len(modules[0])+1)):
            m = f'<heading>{i}</heading><subheading>'
            i1 = ''
            for l in range(1,len(submodule[0].split('|')[0].split('</li>'))+1):
                i = f"<item{l}>{submodule[0].split('|')[0].split('</li>')[l-1]}</item{l}>"
                i1 += i
            s = ''
            s += f'<module{c}>' + m + i1 + '</subheading>' + f'</module{c}>'
            f += s
        f1 = s1 + f + s2
        module_list = f1


        yield{
            'title' : title,
            'institute' : institute,
            'short_desc' : short_desc,
            'description'  :desc,
            'objective' : objectives,
            'target_students' : target_students,
            'total_duration' : c_duration,
            'start_date' : c_date,
            'batch' : c_batch,
            'learn_type' : learning,
            'masterclass' : masterclass,
            'eligibility' : eligible,
            'assesment' : asses,
            'content_module' : module_list,
            'regular_price' : fee,
            'installments' : installments,
            'installment_date' : install_date,
            'installment_amount' : install_amount,
            'instructor_name' : mentors,
            'instructor_degree' : mentors_degree,
            'instructor_desc' : faculty_desc,
            'instructor_image' : mentor_img,
            'reviewer_name' : testimonial_name,
            'reviewer_design'  :testimonial_desig,
            'reviewer_review' : testimonial_desc
            
        }